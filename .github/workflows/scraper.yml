name: Zillow Property Scraper

on:
  schedule:
    # Run every day at 3:00 AM UTC (11:00 PM EST previous day)
    - cron: '0 3 * * *'
  workflow_dispatch: # Manual trigger to run the hardcoded Queue 2

jobs:
  scrape-zillow:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hour timeout for long runs
    permissions:
      contents: write # Needed to commit results back to the repo
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install Python dependencies from requirements.txt
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt # <-- FIX: Use your requirements.txt file
        
    - name: Run Zillow scraper for Queue 2
      run: |
        # Your Python script is hardcoded to run Queue 2.
        # It will save output to the 'data' directory by default.
        python main.py
      env:
        # Pass HEADLESS=true to ensure the scraper runs without a GUI.
        # The Python script uses this environment variable.
        HEADLESS: 'true'
        # The output directory is set in main.py, which defaults to 'data'
        OUTPUT_DIR: 'data'
    
    - name: Upload scraped data as artifact
      uses: actions/upload-artifact@v4
      if: always() # Run this even if the scraper step fails
      with:
        name: zillow-scraped-data-${{ github.run_id }}
        path: data/ # <-- FIX: Correctly path to the 'data' directory where results are saved
        retention-days: 30
    
    - name: Commit and push results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add everything inside the 'data' directory
        git add data/
        
        # Commit only if there are new files or changes
        if ! git diff --staged --quiet; then
          git commit -m "Daily Zillow scraping results for Queue 2 - $(date)"
          git push
        else
          echo "No new data to commit"
        fi
      env:
        # The GITHUB_TOKEN is provided by GitHub Actions automatically
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
